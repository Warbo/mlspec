# MLSpec: Machine Learning for QuickSpec #

This project constructs "theories" for the QuickSpec system to explore.

Specifically, it reads from stdin, descriptions of functions as JSON like:

    {
        "package" : "foo"
      , "module"  : "Bar.Baz"
      , "name"    : "quux"
      , "type"    : "Bar.T a -> Baz.U b"
      , "arity"   : 1
    }

It takes a directory name as argument, and inside that directory creates a new
Haskell project. That project has all of the given packages as Cabal
dependencies; along with an executable `Main.hs` which imports all of the given
modules, defines a QuickSpec "theory" containing all of the given functions and
a `main` function which calls `quickSpec` on that theory.

If the `SIZE` environment variable is available, it will be read as an `Int` and
used as an upper bound on the number of functions added to the theory.
